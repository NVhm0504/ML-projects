✅ Project 8: CIFAR-10 Image Classification (Deep Learning)
▶️ Step 1: Libraries

import tensorflow as tf
from tensorflow.keras.datasets import cifar10
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
import matplotlib.pyplot as plt

▶️ Step 2: Load and Preprocess Data

(X_train, y_train), (X_test, y_test) = cifar10.load_data()

# Normalize the pixel values
X_train = X_train / 255.0
X_test = X_test / 255.0

# Define class names
class_names = ['Airplane','Automobile','Bird','Cat','Deer','Dog','Frog','Horse','Ship','Truck']

▶️ Step 3: Model Building

model = Sequential([
    Conv2D(32, (3,3), activation='relu', input_shape=(32,32,3)),
    MaxPooling2D((2,2)),
    Conv2D(64, (3,3), activation='relu'),
    MaxPooling2D((2,2)),
    Flatten(),
    Dense(128, activation='relu'),
    Dropout(0.3),
    Dense(10, activation='softmax')
])

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

▶️ Step 4: Train Model

history = model.fit(X_train, y_train, epochs=10, validation_data=(X_test, y_test))

▶️ Step 5: Evaluation

test_loss, test_acc = model.evaluate(X_test, y_test)
print(f'Test accuracy: {test_acc:.4f}')

▶️ Step 6: Plotting Accuracy

plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend()
plt.show()

✅ Bonus: Sample Prediction

import numpy as np

index = 100
sample = X_test[index].reshape(1,32,32,3)
prediction = model.predict(sample)
predicted_label = class_names[np.argmax(prediction)]

plt.imshow(X_test[index])
plt.title(f'Predicted: {predicted_label}')
plt.show()

